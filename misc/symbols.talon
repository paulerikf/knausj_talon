question [mark]: insert("?")
tilde: insert("~")
(bang | exclamation point): insert("!")
dollar [sign]: insert("$")
(downscore | underscore): insert("_")
colon: insert(":")
(paren | left paren): insert("(")
(rparen | are paren | right paren): insert(")")
(bracket | brack | left bracket): insert("{")
(rbrack | are bracket | right bracket): insert("}")
(angle | left angle | less than): insert("<")
(rangle | are angle | right angle | greater than): insert(">")
(star | asterisk): insert("*")
(pound | hash [sign] | octo | thorpe | number sign): insert("#")
percent [sign]: insert("%")
caret: insert("^")
at sign: insert("@")
(and sign | ampersand): insert("&")
pipe: insert("|")
(dubquote | double quote): insert('"')
triple quote: insert("'''")
(dot dot | dotdot): insert("..")
ellipses: insert("â€¦")
comma and: insert('","')
plus: insert("+")
arrow: insert("->")
dub arrow: insert("=>")
op dub: insert(" => ")
(op | pad) colon: insert(" : ")
indirect: insert("&")
dereference: insert("*")
(op equals | assign): insert(" = ")
op (minus | subtract | sub): insert(" - ")
op (plus | add): insert(" + ")
op (times | multiply): insert(" * ")
op divide: insert(" / ")
op mod: insert(" % ")
[op] (minus | subtract | sub) equals: insert(" -= ")
[op] (plus | add) equals: insert(" += ")
[op] (times | multiply) equals: insert(" *= ")
[op] divide equals: insert(" /= ")
[op] mod equals: insert(" %= ")
(op | is) greater [than]: insert(" > ")
(op | is) less [than]: insert(" < ")
(op | is) equal: insert(" == ")
(op | is) not equal: insert(" != ")
(op | is) greater [than] or equal: insert(" >= ")
(op | is) less [than] or equal: insert(" <= ")
(op (power | exponent) | to the power [of]): insert(" ** ")
(op | logical) and: insert(" && ")
op or: insert(" || ")
[op] (logical | bitwise) and: insert(" & ")
[op] bitwise or: insert(" | ")
[op] logical or: insert(" || ")
(op | logical | bitwise) (ex | exclusive) or: insert(" ^ ")
[(op | logical | bitwise)] (left shift | shift left): insert(" << ")
[(op | logical | bitwise)] (right shift | shift right): insert(" >> ")
(op | logical | bitwise) and equals: insert(" &= ")
(op | logical | bitwise) or equals: insert(" |= ")
(op | logical | bitwise) (ex | exclusive) or equals: insert(" ^= ")
[(op | logical | bitwise)] (left shift | shift left) equals: insert(" <<= ")
[(op | logical | bitwise)] (left right | shift right) equals: insert(" >>= ")